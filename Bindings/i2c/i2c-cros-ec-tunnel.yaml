# SPDX-License-Identifier: None
%YAML 1.2
---
$id: http://devicetree.org/schemas/Bindings/i2c/i2c-cros-ec-tunnel.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#
version: 1

title: I2C bus that tunnels through the ChromeOS EC (cros-ec)

maintainers:
  - Doug Anderson <dianders@chromium.org>
description: |+
  The node for this device should be under a cros-ec node like google,cros-ec-spi
  or google,cros-ec-i2c.


             

properties:
  compatible: {}
examples:
  - |
    cros-ec@0 {
      compatible = "google,cros-ec-spi";

      ...

      i2c-tunnel {
        compatible = "google,cros-ec-i2c-tunnel";
        #address-cells = <1>;
        #size-cells = <0>;

        google,remote-bus = <0>;

        battery: sbs-battery@b {
          compatible = "sbs,sbs-battery";
          reg = <0xb>;
          sbs,poll-retry-count = <1>;
        };
      };
historical: |+
  I2C bus that tunnels through the ChromeOS EC (cros-ec)
  ======================================================
  On some ChromeOS board designs we've got a connection to the EC (embedded
  controller) but no direct connection to some devices on the other side of
  the EC (like a battery and PMIC).  To get access to those devices we need
  to tunnel our i2c commands through the EC.

  The node for this device should be under a cros-ec node like google,cros-ec-spi
  or google,cros-ec-i2c.


  Required properties:
  - compatible: google,cros-ec-i2c-tunnel
  - google,remote-bus: The EC bus we'd like to talk to.

  Optional child nodes:
  - One node per I2C device connected to the tunnelled I2C bus.


...
