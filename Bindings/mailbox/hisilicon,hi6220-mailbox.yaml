# SPDX-License-Identifier: None
%YAML 1.2
---
$id: http://devicetree.org/schemas/Bindings/mailbox/hisilicon,hi6220-mailbox.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#
version: 1

title: Hisilicon Hi6220 Mailbox Driver

maintainers:
  - Leo Yan <leo.yan@linaro.org>
description: |+
  Hisilicon Hi6220 mailbox supports up to 32 channels. Each channel
  is unidirectional with a maximum message size of 8 words. I/O is
  performed using register access (there is no DMA) and the cell
  raises an interrupt when messages are received.

  Mailbox Device Node:
  ====================

             

properties:
  compatible: {}
historical: |+
  Hisilicon Hi6220 Mailbox Driver
  ===============================

  Hisilicon Hi6220 mailbox supports up to 32 channels. Each channel
  is unidirectional with a maximum message size of 8 words. I/O is
  performed using register access (there is no DMA) and the cell
  raises an interrupt when messages are received.

  Mailbox Device Node:
  ====================

  Required properties:
  --------------------
  - compatible:		Shall be "hisilicon,hi6220-mbox"
  - reg:			Contains the mailbox register address range (base
  			address and length); the first item is for IPC
  			registers, the second item is shared buffer for
  			slots.
  - #mbox-cells:		Common mailbox binding property to identify the number
  			of cells required for the mailbox specifier. Must be 3.
  			<&phandle slot_id dst_irq ack_irq>
  			  phandle: Label name of mailbox controller
  			  slot_id: Slot id used either for TX or RX
  			  dst_irq: IRQ identifier index number which used by MCU
  			  ack_irq: IRQ identifier index number with generating a
  			           TX/RX interrupt to application processor,
  				   mailbox driver uses it to acknowledge interrupt
  - interrupts:		Contains the interrupt information for the mailbox
  			device. The format is dependent on which interrupt
  			controller the SoCs use.

  Optional Properties:
  --------------------
  - hi6220,mbox-tx-noirq: Property of MCU firmware's feature, so mailbox driver
  			use this flag to ask MCU to enable "automatic idle
  			flag" mode or IRQ generated mode to acknowledge a TX
  			completion.

...
