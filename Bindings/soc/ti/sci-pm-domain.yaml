# SPDX-License-Identifier: None
%YAML 1.2
---
$id: http://devicetree.org/schemas/Bindings/soc/ti/sci-pm-domain.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#
version: 1

title: Texas Instruments TI-SCI Generic Power Domain

maintainers:
  - Dave Gerlach <d-gerlach@ti.com>
description: |+
  Some TI SoCs contain a system controller (like the PMMC, etc...) that is
  responsible for controlling the state of the IPs that are present.
  Communication between the host processor running an OS and the system
  controller happens through a protocol known as TI-SCI [1].

  [1] Documentation/devicetree/bindings/arm/keystone/ti,sci.txt

  PM Domain Node
  ==============
  The PM domain node represents the global PM domain managed by the PMMC, which
  in this case is the implementation as documented by the generic PM domain
  bindings in Documentation/devicetree/bindings/power/power_domain.txt.  Because
  this relies on the TI SCI protocol to communicate with the PMMC it must be a
  child of the pmmc node.

             

properties:
  compatible: {}
historical: |+
  Texas Instruments TI-SCI Generic Power Domain
  ---------------------------------------------

  Some TI SoCs contain a system controller (like the PMMC, etc...) that is
  responsible for controlling the state of the IPs that are present.
  Communication between the host processor running an OS and the system
  controller happens through a protocol known as TI-SCI [1].

  [1] Documentation/devicetree/bindings/arm/keystone/ti,sci.txt

  PM Domain Node
  ==============
  The PM domain node represents the global PM domain managed by the PMMC, which
  in this case is the implementation as documented by the generic PM domain
  bindings in Documentation/devicetree/bindings/power/power_domain.txt.  Because
  this relies on the TI SCI protocol to communicate with the PMMC it must be a
  child of the pmmc node.

  Required Properties:
  --------------------
  - compatible: should be "ti,sci-pm-domain"
  - #power-domain-cells: Must be 1 so that an id can be provided in each
  		       device node.

...
