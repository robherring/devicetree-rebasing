# SPDX-License-Identifier: None
%YAML 1.2
---
$id: http://devicetree.org/schemas/Bindings/pci/xilinx-pcie.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#
version: 1

title: Xilinx AXI PCIe Root Port Bridge DT description

maintainers:
  - Srikanth Thokala <sthokal@xilinx.com>
description: test

properties:
  compatible: {}
historical: |+
  * Xilinx AXI PCIe Root Port Bridge DT description

  Required properties:
  - #address-cells: Address representation for root ports, set to <3>
  - #size-cells: Size representation for root ports, set to <2>
  - #interrupt-cells: specifies the number of cells needed to encode an
  	interrupt source. The value must be 1.
  - compatible: Should contain "xlnx,axi-pcie-host-1.00.a"
  - reg: Should contain AXI PCIe registers location and length
  - device_type: must be "pci"
  - interrupts: Should contain AXI PCIe interrupt
  - interrupt-map-mask,
    interrupt-map: standard PCI properties to define the mapping of the
  	PCI interface to interrupt numbers.
  - ranges: ranges for the PCI memory regions (I/O space region is not
  	supported by hardware)
  	Please refer to the standard PCI bus binding document for a more
  	detailed explanation

  Optional properties for Zynq/Microblaze:
  - bus-range: PCI bus numbers covered

  Interrupt controller child node
  +++++++++++++++++++++++++++++++
  Required properties:
  - interrupt-controller: identifies the node as an interrupt controller
  - #address-cells: specifies the number of cells needed to encode an
  	address. The value must be 0.
  - #interrupt-cells: specifies the number of cells needed to encode an
  	interrupt source. The value must be 1.

  NOTE:
  The core provides a single interrupt for both INTx/MSI messages. So,
  created a interrupt controller node to support 'interrupt-map' DT
  functionality.  The driver will create an IRQ domain for this map, decode
  the four INTx interrupts in ISR and route them to this domain.


...
