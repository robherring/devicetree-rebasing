# SPDX-License-Identifier: None
%YAML 1.2
---
$id: http://devicetree.org/schemas/Bindings/leds/leds-bcm6328.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#
version: 1

title: LEDs connected to Broadcom BCM6328 controller

maintainers:
  - Álvaro Fernández Rojas <noltari@gmail.com>
description: |+
  This controller is present on BCM6318, BCM6328, BCM6362 and BCM63268.
  In these SoCs it's possible to control LEDs both as GPIOs or by hardware.
  However, on some devices there are Serial LEDs (LEDs connected to a 74x164
  controller), which can either be controlled by software (exporting the 74x164
  as spi-gpio. See Documentation/devicetree/bindings/gpio/gpio-74x164.txt), or
  by hardware using this driver.
  Some of these Serial LEDs are hardware controlled (e.g. ethernet LEDs) and
  exporting the 74x164 as spi-gpio prevents those LEDs to be hardware
  controlled, so the only chance to keep them working is by using this driver.

  BCM6328 LED controller has a HWDIS register, which controls whether a LED
  should be controlled by a hardware signal instead of the MODE register value,
  with 0 meaning hardware control enabled and 1 hardware control disabled. This
  is usually 1:1 for hardware to LED signals, but through the activity/link
  registers you have some limited control over rerouting the LEDs (as
  explained later in brcm,link-signal-sources). Even if a LED is hardware
  controlled you are still able to make it blink or light it up if it isn't,
  but you can't turn it off if the hardware decides to light it up. For this
  reason, hardware controlled LEDs aren't registered as LED class devices.

             

properties:
  compatible:
    items:
      - enum:
          - brcm,bcm6328-leds
          - led
    minItems: 1
    maxItems: 1
    additionalItems: false
  reg:
    minItems: 1
    maxItems: 1
    additionalItems: false
  '#address-cells':
    const: 0x1
  '#size-cells':
    const: 0x0
  brcm,serial-leds:
    description: FIXME
    type: boolean
  brcm,serial-dat-low:
    description: FIXME
    type: boolean
  brcm,serial-shift-inv:
    description: FIXME
    type: boolean
historical: |+
  LEDs connected to Broadcom BCM6328 controller

  This controller is present on BCM6318, BCM6328, BCM6362 and BCM63268.
  In these SoCs it's possible to control LEDs both as GPIOs or by hardware.
  However, on some devices there are Serial LEDs (LEDs connected to a 74x164
  controller), which can either be controlled by software (exporting the 74x164
  as spi-gpio. See Documentation/devicetree/bindings/gpio/gpio-74x164.txt), or
  by hardware using this driver.
  Some of these Serial LEDs are hardware controlled (e.g. ethernet LEDs) and
  exporting the 74x164 as spi-gpio prevents those LEDs to be hardware
  controlled, so the only chance to keep them working is by using this driver.

  BCM6328 LED controller has a HWDIS register, which controls whether a LED
  should be controlled by a hardware signal instead of the MODE register value,
  with 0 meaning hardware control enabled and 1 hardware control disabled. This
  is usually 1:1 for hardware to LED signals, but through the activity/link
  registers you have some limited control over rerouting the LEDs (as
  explained later in brcm,link-signal-sources). Even if a LED is hardware
  controlled you are still able to make it blink or light it up if it isn't,
  but you can't turn it off if the hardware decides to light it up. For this
  reason, hardware controlled LEDs aren't registered as LED class devices.

  Required properties:
    - compatible : should be "brcm,bcm6328-leds".
    - #address-cells : must be 1.
    - #size-cells : must be 0.
    - reg : BCM6328 LED controller address and size.

  Optional properties:
    - brcm,serial-leds : Boolean, enables Serial LEDs.
      Default : false
    - brcm,serial-mux : Boolean, enables Serial LEDs multiplexing.
      Default : false
    - brcm,serial-clk-low : Boolean, makes clock signal active low.
      Default : false
    - brcm,serial-dat-low : Boolean, makes data signal active low.
      Default : false
    - brcm,serial-shift-inv : Boolean, inverts Serial LEDs shift direction.
      Default : false

  Each LED is represented as a sub-node of the brcm,bcm6328-leds device.

  LED sub-node required properties:
    - reg : LED pin number (only LEDs 0 to 23 are valid).

  LED sub-node optional properties:
    a) Optional properties for sub-nodes related to software controlled LEDs:
      - label : see Documentation/devicetree/bindings/leds/common.txt
      - active-low : Boolean, makes LED active low.
        Default : false
      - default-state : see
        Documentation/devicetree/bindings/leds/common.txt
      - linux,default-trigger : see
        Documentation/devicetree/bindings/leds/common.txt

    b) Optional properties for sub-nodes related to hardware controlled LEDs:
      - brcm,hardware-controlled : Boolean, makes this LED hardware controlled.
        Default : false
      - brcm,link-signal-sources : An array of hardware link
        signal sources. Up to four link hardware signals can get muxed into
        these LEDs. Only valid for LEDs 0 to 7, where LED signals 0 to 3 may
        be muxed to LEDs 0 to 3, and signals 4 to 7 may be muxed to LEDs
        4 to 7. A signal can be muxed to more than one LED, and one LED can
        have more than one source signal.
      - brcm,activity-signal-sources : An array of hardware activity
        signal sources. Up to four activity hardware signals can get muxed into
        these LEDs. Only valid for LEDs 0 to 7, where LED signals 0 to 3 may
        be muxed to LEDs 0 to 3, and signals 4 to 7 may be muxed to LEDs
        4 to 7. A signal can be muxed to more than one LED, and one LED can
        have more than one source signal.

...
