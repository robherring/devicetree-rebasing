# SPDX-License-Identifier: None
%YAML 1.2
---
$id: http://devicetree.org/schemas/Bindings/mmc/ti-omap-hsmmc.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#
version: 1

title: TI Highspeed MMC host controller for OMAP and 66AK2G family.

maintainers:
  - Rajendra Nayak <rnayak@ti.com>
  - Andreas Fenkart <afenkart@gmail.com>
description: |+
  The Highspeed MMC Host Controller on TI OMAP and 66AK2G family
  provides an interface for MMC, SD, and SDIO types of memory cards.

  This file documents differences between the core properties described
  by mmc.txt and the properties used by the omap_hsmmc driver.

             

properties:
  compatible:
    items:
      - enum:
          - ti,omap4-hsmmc
          - ti,omap3-hsmmc
          - ti,k2g-hsmmc
          - ti,omap3-pre-es3-hsmmc
          - ti,omap2-hsmmc
    minItems: 1
    maxItems: 1
    additionalItems: false
  reg:
    minItems: 1
    maxItems: 1
    additionalItems: false
  interrupts: {}
  ti,hwmods:
    items:
      - const: mmc1
    minItems: 1
    maxItems: 1
    additionalItems: false
    description: FIXME
  ti,dual-volt:
    description: FIXME
    type: boolean
  dmas: {}
  dma-names:
    items:
      - const: tx
      - const: rx
    minItems: 2
    maxItems: 2
    additionalItems: false
  pbias-supply: {}
  pinctrl-names:
    items:
      - const: default
    minItems: 1
    maxItems: 1
    additionalItems: false
  pinctrl-0: {}
  vmmc-supply: {}
  bus-width: {}
  ti,needs-special-reset:
    description: FIXME
    type: boolean
  ti,needs-special-hs-handling:
    description: FIXME
    type: boolean
  cd-gpios: {}
  no-1-8-v: {}
  max-frequency: {}
  power-domains: {}
  clocks: {}
  clock-names:
    items:
      - const: fck
      - const: mmchsdb_fck
    minItems: 2
    maxItems: 2
    additionalItems: false
historical: |+
  * TI Highspeed MMC host controller for OMAP and 66AK2G family.

  The Highspeed MMC Host Controller on TI OMAP and 66AK2G family
  provides an interface for MMC, SD, and SDIO types of memory cards.

  This file documents differences between the core properties described
  by mmc.txt and the properties used by the omap_hsmmc driver.

  Required properties:
  --------------------
  - compatible:
   Should be "ti,omap2-hsmmc", for OMAP2 controllers
   Should be "ti,omap3-hsmmc", for OMAP3 controllers
   Should be "ti,omap3-pre-es3-hsmmc" for OMAP3 controllers pre ES3.0
   Should be "ti,omap4-hsmmc", for OMAP4 controllers
   Should be "ti,am33xx-hsmmc", for AM335x controllers
   Should be "ti,k2g-hsmmc", "ti,omap4-hsmmc" for 66AK2G controllers.

  SoC specific required properties:
  ---------------------------------
  The following are mandatory properties for OMAPs, AM33xx and AM43xx SoCs only:
  - ti,hwmods: Must be "mmc<n>", n is controller instance starting 1.

  The following are mandatory properties for 66AK2G SoCs only:
  - power-domains:Should contain a phandle to a PM domain provider node
  		and an args specifier containing the MMC device id
  		value. This property is as per the binding,
  		Documentation/devicetree/bindings/soc/ti/sci-pm-domain.txt
  - clocks:	Must contain an entry for each entry in clock-names. Should
  		be defined as per the he appropriate clock bindings consumer
  		usage in Documentation/devicetree/bindings/clock/ti,sci-clk.txt
  - clock-names:	Shall be "fck" for the functional clock,
  		and "mmchsdb_fck" for the debounce clock.


  Optional properties:
  --------------------
  - ti,dual-volt:		boolean, supports dual voltage cards
  - <supply-name>-supply:	phandle to the regulator device tree node
  			  "supply-name" examples are "vmmc",
  			  "vmmc_aux"(deprecated)/"vqmmc" etc
  - ti,non-removable:	non-removable slot (like eMMC)
  - ti,needs-special-reset:	Requires a special softreset sequence
  - ti,needs-special-hs-handling:	HSMMC IP needs special setting
  				  for handling High Speed
  - dmas:			List of DMA specifiers with the controller specific
  			format as described in the generic DMA client
  			binding. A tx and rx specifier is required.
  - dma-names:		List of DMA request names. These strings correspond
  			1:1 with the DMA specifiers listed in dmas.
  			The string naming is to be "rx" and "tx" for
  			RX and TX DMA requests, respectively.

...
