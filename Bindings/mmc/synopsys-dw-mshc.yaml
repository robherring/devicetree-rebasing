# SPDX-License-Identifier: None
%YAML 1.2
---
$id: http://devicetree.org/schemas/Bindings/mmc/synopsys-dw-mshc.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#
version: 1

title: Synopsys Designware Mobile Storage Host Controller

maintainers:
  - Dinh Nguyen <dinguyen@altera.com>
  - Jaehoon Chung <jh80.chung@samsung.com>
description: |+
  The Synopsys designware mobile storage host controller is used to interface
  a SoC with storage medium such as eMMC or SD/MMC cards. This file documents
  differences between the core mmc properties described by mmc.txt and the
  properties used by the Synopsys Designware Mobile Storage Host Controller.

             

properties:
  compatible:
    items:
      - const: snps,dw-mshc
    minItems: 1
    maxItems: 1
    additionalItems: false
  reg:
    minItems: 1
    maxItems: 1
    additionalItems: false
  interrupts: {}
  num-slots: {}
  clocks: {}
  clock-names:
    items:
      - const: ciu
      - const: biu
    minItems: 2
    maxItems: 2
    additionalItems: false
  resets: {}
historical: |+
  * Synopsys Designware Mobile Storage Host Controller

  The Synopsys designware mobile storage host controller is used to interface
  a SoC with storage medium such as eMMC or SD/MMC cards. This file documents
  differences between the core mmc properties described by mmc.txt and the
  properties used by the Synopsys Designware Mobile Storage Host Controller.

  Required Properties:

  * compatible: should be
  	- snps,dw-mshc: for controllers compliant with synopsys dw-mshc.
  * #address-cells: should be 1.
  * #size-cells: should be 0.

  # Slots (DEPRECATED): The slot specific information are contained within
    child-nodes with each child-node representing a supported slot. There should
    be atleast one child node representing a card slot. The name of the child node
    representing the slot is recommended to be slot@n where n is the unique number
    of the slot connected to the controller. The following are optional properties
    which can be included in the slot child node.

  	* reg: specifies the physical slot number. The valid values of this
  	  property is 0 to (num-slots -1), where num-slots is the value
  	  specified by the num-slots property.

  	* bus-width: as documented in mmc core bindings.

  	* wp-gpios: specifies the write protect gpio line. The format of the
  	  gpio specifier depends on the gpio controller. If a GPIO is not used
  	  for write-protect, this property is optional.

  	* disable-wp: If the wp-gpios property isn't present then (by default)
  	  we'd assume that the write protect is hooked up directly to the
  	  controller's special purpose write protect line (accessible via
  	  the WRTPRT register).  However, it's possible that we simply don't
  	  want write protect.  In that case specify 'disable-wp'.
  	  NOTE: This property is not required for slots known to always
  	  connect to eMMC or SDIO cards.

  Optional properties:

  * resets: phandle + reset specifier pair, intended to represent hardware
    reset signal present internally in some host controller IC designs.
    See Documentation/devicetree/bindings/reset/reset.txt for details.

  * reset-names: request name for using "resets" property. Must be "reset".
  	(It will be used together with "resets" property.)

  * clocks: from common clock binding: handle to biu and ciu clocks for the
    bus interface unit clock and the card interface unit clock.

  * clock-names: from common clock binding: Shall be "biu" and "ciu".
    If the biu clock is missing we'll simply skip enabling it.  If the
    ciu clock is missing we'll just assume that the clock is running at
    clock-frequency.  It is an error to omit both the ciu clock and the
    clock-frequency.

  * clock-frequency: should be the frequency (in Hz) of the ciu clock.  If this
    is specified and the ciu clock is specified then we'll try to set the ciu
    clock to this at probe time.

  * clock-freq-min-max (DEPRECATED): Minimum and Maximum clock frequency for card output
    clock(cclk_out). If it's not specified, max is 200MHZ and min is 400KHz by default.
  	  (Use the "max-frequency" instead of "clock-freq-min-max".)

  * num-slots (DEPRECATED): specifies the number of slots supported by the controller.
    The number of physical slots actually used could be equal or less than the
    value specified by num-slots. If this property is not specified, the value
    of num-slot property is assumed to be 1.

  * fifo-depth: The maximum size of the tx/rx fifo's. If this property is not
    specified, the default value of the fifo size is determined from the
    controller registers.

  * card-detect-delay: Delay in milli-seconds before detecting card after card
    insert event. The default value is 0.

  * data-addr: Override fifo address with value provided by DT. The default FIFO reg
    offset is assumed as 0x100 (version < 0x240A) and 0x200(version >= 0x240A) by
    driver. If the controller does not follow this rule, please use this property
    to set fifo address in device tree.

  * fifo-watermark-aligned: Data done irq is expected if data length is less than
    watermark in PIO mode. But fifo watermark is requested to be aligned with data
    length in some SoC so that TX/RX irq can be generated with data done irq. Add this
    watermark quirk to mark this requirement and force fifo watermark setting
    accordingly.

  * vmmc-supply: The phandle to the regulator to use for vmmc.  If this is
    specified we'll defer probe until we can find this regulator.

  * dmas: List of DMA specifiers with the controller specific format as described
    in the generic DMA client binding. Refer to dma.txt for details.

  * dma-names: request names for generic DMA client binding. Must be "rx-tx".
    Refer to dma.txt for details.

  Aliases:

  - All the MSHC controller nodes should be represented in the aliases node using
    the following format 'mshc{n}' where n is a unique number for the alias.

...
