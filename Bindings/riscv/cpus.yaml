# SPDX-License-Identifier: None
%YAML 1.2
---
$id: http://devicetree.org/schemas/Bindings/riscv/cpus.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#
version: 1

title: RISC-V CPU Bindings

maintainers:
  - Palmer Dabbelt <palmer@dabbelt.com>
description: |+
  The device tree allows to describe the layout of CPUs in a system through
  the "cpus" node, which in turn contains a number of subnodes (ie "cpu")
  defining properties for every cpu.

  Bindings for CPU nodes follow the Devicetree Specification, available from:

  https://www.devicetree.org/specifications/

  with updates for 32-bit and 64-bit RISC-V systems provided in this document.

  ===========
  Terminology
  ===========

  This document uses some terminology common to the RISC-V community that is not
  widely used, the definitions of which are listed here:

  * hart: A hardware execution context, which contains all the state mandated by
    the RISC-V ISA: a PC and some registers.  This terminology is designed to
    disambiguate software's view of execution contexts from any particular
    microarchitectural implementation strategy.  For example, my Intel laptop is
    described as having one socket with two cores, each of which has two hyper
    threads.  Therefore this system has four harts.

  =====================================
  cpus and cpu node bindings definition
  =====================================

  The RISC-V architecture, in accordance with the Devicetree Specification,
  requires the cpus and cpu nodes to be present and contain the properties
  described below.

  - cpus node

          Description: Container of cpu nodes

          The node name must be "cpus".

             

properties:
  compatible: {}
historical: |+
  ===================
  RISC-V CPU Bindings
  ===================

  The device tree allows to describe the layout of CPUs in a system through
  the "cpus" node, which in turn contains a number of subnodes (ie "cpu")
  defining properties for every cpu.

  Bindings for CPU nodes follow the Devicetree Specification, available from:

  https://www.devicetree.org/specifications/

  with updates for 32-bit and 64-bit RISC-V systems provided in this document.

  ===========
  Terminology
  ===========

  This document uses some terminology common to the RISC-V community that is not
  widely used, the definitions of which are listed here:

  * hart: A hardware execution context, which contains all the state mandated by
    the RISC-V ISA: a PC and some registers.  This terminology is designed to
    disambiguate software's view of execution contexts from any particular
    microarchitectural implementation strategy.  For example, my Intel laptop is
    described as having one socket with two cores, each of which has two hyper
    threads.  Therefore this system has four harts.

  =====================================
  cpus and cpu node bindings definition
  =====================================

  The RISC-V architecture, in accordance with the Devicetree Specification,
  requires the cpus and cpu nodes to be present and contain the properties
  described below.

  - cpus node

          Description: Container of cpu nodes

          The node name must be "cpus".

          A cpus node must define the following properties:

          - #address-cells
                  Usage: required
                  Value type: <u32>
                  Definition: must be set to 1
          - #size-cells
                  Usage: required
                  Value type: <u32>
                  Definition: must be set to 0

  - cpu node

          Description: Describes a hart context

          PROPERTIES

          - device_type
                  Usage: required
                  Value type: <string>
                  Definition: must be "cpu"
          - reg
                  Usage: required
                  Value type: <u32>
                  Definition: The hart ID of this CPU node
          - compatible:
                  Usage: required
                  Value type: <stringlist>
                  Definition: must contain "riscv", may contain one of
                              "sifive,rocket0"
          - mmu-type:
                  Usage: optional
                  Value type: <string>
                  Definition: Specifies the CPU's MMU type.  Possible values are
                              "riscv,sv32"
                              "riscv,sv39"
                              "riscv,sv48"
          - riscv,isa:
                  Usage: required
                  Value type: <string>
                  Definition: Contains the RISC-V ISA string of this hart.  These
                              ISA strings are defined by the RISC-V ISA manual.

...
